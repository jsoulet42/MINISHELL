si i = dollar >> fonction verif validité

fonction is pattern = "" , '' , "' , '",  '123 , "132 , 123' , "123
{
	faire un char ** de : "" , '' , "' , '" >>> qui serviera a la fonction qui reconnait les paternes

	puis pour ca : '123 , "132 , 123' , "123 >>>> seconde partie

	sous fonction = verifie si dans la string ya des quote seul
	si oui apel fonction
	verif_word = verifie le mot d'avant ou apres la quote jusqua espace
}

fonction add_space begin

fonction add space end


struct
{
	ajouté type space , no space
}

si space trinity = [ 123]
sinon trinity = [123]
'123'"456"
if '"
i = '
i + 1 = "
'123456"
'123456'
"123123"

123"456"456

"123"456"789"
"1"2" 4"'5' 4"
"123" "456"
123
 456
123 456


/*if i n'est pas une quote
{		while
			tant que pas quote ++
	if i = ' || "
		if i = '
			while
			tant que i != de '
		else
			while
			tant que i != de "
		if i + 1 != de ' || " || \0 || ' '
			while
				tant que != de ' || " || \0 || ' '
		if i == \0 || ' '
			join de 0 a i
}


  if i est une quote
  {

  }

" || '

1

